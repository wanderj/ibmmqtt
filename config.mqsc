DEFINE CHANNEL(PASSWORD.SVRCONN) CHLTYPE(SVRCONN)
SET CHLAUTH(PASSWORD.SVRCONN) TYPE(BLOCKUSER) USERLIST('nobody') DESCR('Allow privileged users on this channel')
SET CHLAUTH('*') TYPE(ADDRESSMAP) ADDRESS('*') USERSRC(NOACCESS) DESCR('BackStop rule')
SET CHLAUTH(PASSWORD.SVRCONN) TYPE(ADDRESSMAP) ADDRESS('*') USERSRC(CHANNEL) CHCKCLNT(REQUIRED)
ALTER AUTHINFO(SYSTEM.DEFAULT.AUTHINFO.IDPWOS) AUTHTYPE(IDPWOS) ADOPTCTX(YES)
REFRESH SECURITY TYPE(CONNAUTH)

DEFINE QLOCAL('SYSTEM.MQTT.TRANSMIT.QUEUE') USAGE(XMITQ) MAXDEPTH(100000)
ALTER QMGR DEFXMITQ('SYSTEM.MQTT.TRANSMIT.QUEUE')
SET AUTHREC OBJTYPE(QUEUE) PROFILE(SYSTEM.MQTT.TRANSMIT.QUEUE) PRINCIPAL('nobody') AUTHRMV(ALL) AUTHADD(PUT)
SET AUTHREC OBJTYPE(TOPIC) PROFILE(SYSTEM.BASE.TOPIC) PRINCIPAL('nobody') AUTHRMV(ALL) AUTHADD(PUB,SUB)
DEF SERVICE(SYSTEM.MQXR.SERVICE) +
        CONTROL(QMGR) +
        DESCR('Manages clients using MQXR protocols such as MQTT') +
        SERVTYPE(SERVER) +
        STARTCMD('+MQ_INSTALL_PATH+/mqxr/bin/runMQXRService.sh') +
        STARTARG('-m +QMNAME+ -d "+MQ_Q_MGR_DATA_PATH+" -g "+MQ_DATA_PATH+"') +
        STOPCMD('+MQ_INSTALL_PATH+/mqxr/bin/endMQXRService.sh') +
        STOPARG('-m +QMNAME+ -d "+MQ_Q_MGR_DATA_PATH+" -g "+MQ_DATA_PATH+"') +
        STDOUT('+MQ_Q_MGR_DATA_PATH+/mqxr.stdout') +
        STDERR('+MQ_Q_MGR_DATA_PATH+/mqxr.stderr')
START SERVICE(SYSTEM.MQXR.SERVICE)
DEFINE CHANNEL(PlainText) CHLTYPE(MQTT) PORT(1883) MCAUSER('nobody')
ALTER QMGR CHLAUTH(DISABLED)
ALTER AUTHINFO(SYSTEM.DEFAULT.AUTHINFO.IDPWOS) AUTHTYPE(IDPWOS) +
CHCKCLNT(OPTIONAL)
REFRESH SECURITY TYPE(CONNAUTH)